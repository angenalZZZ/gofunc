// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cache.proto

package main

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A CacheWriter Message
type CacheWriter struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Ttl                  uint64   `protobuf:"fixed64,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CacheWriter) Reset()         { *m = CacheWriter{} }
func (m *CacheWriter) String() string { return proto.CompactTextString(m) }
func (*CacheWriter) ProtoMessage()    {}
func (*CacheWriter) Descriptor() ([]byte, []int) {
	return fileDescriptor_5fca3b110c9bbf3a, []int{0}
}

func (m *CacheWriter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CacheWriter.Unmarshal(m, b)
}
func (m *CacheWriter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CacheWriter.Marshal(b, m, deterministic)
}
func (m *CacheWriter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CacheWriter.Merge(m, src)
}
func (m *CacheWriter) XXX_Size() int {
	return xxx_messageInfo_CacheWriter.Size(m)
}
func (m *CacheWriter) XXX_DiscardUnknown() {
	xxx_messageInfo_CacheWriter.DiscardUnknown(m)
}

var xxx_messageInfo_CacheWriter proto.InternalMessageInfo

func (m *CacheWriter) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *CacheWriter) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *CacheWriter) GetTtl() uint64 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

// A CacheReader Message
type CacheReader struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CacheReader) Reset()         { *m = CacheReader{} }
func (m *CacheReader) String() string { return proto.CompactTextString(m) }
func (*CacheReader) ProtoMessage()    {}
func (*CacheReader) Descriptor() ([]byte, []int) {
	return fileDescriptor_5fca3b110c9bbf3a, []int{1}
}

func (m *CacheReader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CacheReader.Unmarshal(m, b)
}
func (m *CacheReader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CacheReader.Marshal(b, m, deterministic)
}
func (m *CacheReader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CacheReader.Merge(m, src)
}
func (m *CacheReader) XXX_Size() int {
	return xxx_messageInfo_CacheReader.Size(m)
}
func (m *CacheReader) XXX_DiscardUnknown() {
	xxx_messageInfo_CacheReader.DiscardUnknown(m)
}

var xxx_messageInfo_CacheReader proto.InternalMessageInfo

func (m *CacheReader) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

// A CacheValue Message
type CacheValue struct {
	Value                []byte   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CacheValue) Reset()         { *m = CacheValue{} }
func (m *CacheValue) String() string { return proto.CompactTextString(m) }
func (*CacheValue) ProtoMessage()    {}
func (*CacheValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_5fca3b110c9bbf3a, []int{2}
}

func (m *CacheValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CacheValue.Unmarshal(m, b)
}
func (m *CacheValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CacheValue.Marshal(b, m, deterministic)
}
func (m *CacheValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CacheValue.Merge(m, src)
}
func (m *CacheValue) XXX_Size() int {
	return xxx_messageInfo_CacheValue.Size(m)
}
func (m *CacheValue) XXX_DiscardUnknown() {
	xxx_messageInfo_CacheValue.DiscardUnknown(m)
}

var xxx_messageInfo_CacheValue proto.InternalMessageInfo

func (m *CacheValue) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

// A CacheTtl Message
type CacheTtl struct {
	Ttl                  uint64   `protobuf:"fixed64,1,opt,name=ttl,proto3" json:"ttl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CacheTtl) Reset()         { *m = CacheTtl{} }
func (m *CacheTtl) String() string { return proto.CompactTextString(m) }
func (*CacheTtl) ProtoMessage()    {}
func (*CacheTtl) Descriptor() ([]byte, []int) {
	return fileDescriptor_5fca3b110c9bbf3a, []int{3}
}

func (m *CacheTtl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CacheTtl.Unmarshal(m, b)
}
func (m *CacheTtl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CacheTtl.Marshal(b, m, deterministic)
}
func (m *CacheTtl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CacheTtl.Merge(m, src)
}
func (m *CacheTtl) XXX_Size() int {
	return xxx_messageInfo_CacheTtl.Size(m)
}
func (m *CacheTtl) XXX_DiscardUnknown() {
	xxx_messageInfo_CacheTtl.DiscardUnknown(m)
}

var xxx_messageInfo_CacheTtl proto.InternalMessageInfo

func (m *CacheTtl) GetTtl() uint64 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func init() {
	proto.RegisterType((*CacheWriter)(nil), "proto3.CacheWriter")
	proto.RegisterType((*CacheReader)(nil), "proto3.CacheReader")
	proto.RegisterType((*CacheValue)(nil), "proto3.CacheValue")
	proto.RegisterType((*CacheTtl)(nil), "proto3.CacheTtl")
}

func init() { proto.RegisterFile("cache.proto", fileDescriptor_5fca3b110c9bbf3a) }

var fileDescriptor_5fca3b110c9bbf3a = []byte{
	// 260 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4e, 0x4e, 0x4c, 0xce,
	0x48, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x03, 0x53, 0xc6, 0x4a, 0xee, 0x5c, 0xdc,
	0xce, 0x20, 0xe1, 0xf0, 0xa2, 0xcc, 0x92, 0xd4, 0x22, 0x21, 0x01, 0x2e, 0xe6, 0xec, 0xd4, 0x4a,
	0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x10, 0x53, 0x48, 0x84, 0x8b, 0xb5, 0x2c, 0x31, 0xa7,
	0x34, 0x55, 0x82, 0x49, 0x81, 0x51, 0x83, 0x27, 0x08, 0xc2, 0x01, 0xa9, 0x2b, 0x29, 0xc9, 0x91,
	0x60, 0x56, 0x60, 0xd4, 0x60, 0x0b, 0x02, 0x31, 0x95, 0xe4, 0xa1, 0x06, 0x05, 0xa5, 0x26, 0xa6,
	0x60, 0x33, 0x48, 0x49, 0x89, 0x8b, 0x0b, 0xac, 0x20, 0x0c, 0x6c, 0x00, 0xdc, 0x58, 0x46, 0x24,
	0x63, 0x95, 0x64, 0xb8, 0x38, 0xc0, 0x6a, 0x42, 0x4a, 0x72, 0x60, 0x56, 0x30, 0xc2, 0xad, 0x30,
	0xba, 0xc6, 0xc8, 0xc5, 0x03, 0x96, 0x0e, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0x15, 0x32, 0xe0,
	0x62, 0x05, 0xbb, 0x5b, 0x48, 0x18, 0xe2, 0x2b, 0x63, 0x3d, 0x24, 0xbf, 0x48, 0x09, 0xa0, 0x08,
	0x86, 0x94, 0xe4, 0x28, 0x31, 0x08, 0x19, 0x72, 0xb1, 0x80, 0x1c, 0x88, 0xa6, 0x01, 0xe2, 0x66,
	0x29, 0x21, 0x14, 0x41, 0xb0, 0x3b, 0xc1, 0x5a, 0xd8, 0x5c, 0x52, 0x73, 0x52, 0x31, 0x6c, 0x81,
	0x6a, 0xc2, 0x66, 0x8b, 0x1e, 0x17, 0x33, 0xc8, 0x07, 0xc4, 0xaa, 0x77, 0x32, 0xe6, 0xe2, 0xcd,
	0xcc, 0xd7, 0x4b, 0x2f, 0x2a, 0x48, 0x86, 0x48, 0x3a, 0x41, 0x42, 0x2a, 0x00, 0xc4, 0x0e, 0x60,
	0x8c, 0x62, 0xc9, 0x4d, 0xcc, 0xcc, 0x5b, 0xc5, 0xc4, 0xeb, 0xe9, 0xaf, 0x97, 0x1e, 0x14, 0xe0,
	0xac, 0x07, 0x16, 0x4f, 0x82, 0xc6, 0x20, 0x20, 0x00, 0x00, 0xff, 0xff, 0x94, 0x3e, 0x89, 0xc1,
	0xd7, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CacheServiceClient is the client API for CacheService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CacheServiceClient interface {
	Write(ctx context.Context, in *CacheWriter, opts ...grpc.CallOption) (*CacheTtl, error)
	Read(ctx context.Context, in *CacheReader, opts ...grpc.CallOption) (*CacheValue, error)
	Delete(ctx context.Context, in *CacheReader, opts ...grpc.CallOption) (*CacheTtl, error)
	Ttl(ctx context.Context, in *CacheReader, opts ...grpc.CallOption) (*CacheTtl, error)
}

type cacheServiceClient struct {
	cc *grpc.ClientConn
}

func NewCacheServiceClient(cc *grpc.ClientConn) CacheServiceClient {
	return &cacheServiceClient{cc}
}

func (c *cacheServiceClient) Write(ctx context.Context, in *CacheWriter, opts ...grpc.CallOption) (*CacheTtl, error) {
	out := new(CacheTtl)
	err := c.cc.Invoke(ctx, "/proto3.CacheService/Write", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cacheServiceClient) Read(ctx context.Context, in *CacheReader, opts ...grpc.CallOption) (*CacheValue, error) {
	out := new(CacheValue)
	err := c.cc.Invoke(ctx, "/proto3.CacheService/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cacheServiceClient) Delete(ctx context.Context, in *CacheReader, opts ...grpc.CallOption) (*CacheTtl, error) {
	out := new(CacheTtl)
	err := c.cc.Invoke(ctx, "/proto3.CacheService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cacheServiceClient) Ttl(ctx context.Context, in *CacheReader, opts ...grpc.CallOption) (*CacheTtl, error) {
	out := new(CacheTtl)
	err := c.cc.Invoke(ctx, "/proto3.CacheService/Ttl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CacheServiceServer is the server API for CacheService service.
type CacheServiceServer interface {
	Write(context.Context, *CacheWriter) (*CacheTtl, error)
	Read(context.Context, *CacheReader) (*CacheValue, error)
	Delete(context.Context, *CacheReader) (*CacheTtl, error)
	Ttl(context.Context, *CacheReader) (*CacheTtl, error)
}

func RegisterCacheServiceServer(s *grpc.Server, srv CacheServiceServer) {
	s.RegisterService(&_CacheService_serviceDesc, srv)
}

func _CacheService_Write_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CacheWriter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheServiceServer).Write(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto3.CacheService/Write",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheServiceServer).Write(ctx, req.(*CacheWriter))
	}
	return interceptor(ctx, in, info, handler)
}

func _CacheService_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CacheReader)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheServiceServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto3.CacheService/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheServiceServer).Read(ctx, req.(*CacheReader))
	}
	return interceptor(ctx, in, info, handler)
}

func _CacheService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CacheReader)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto3.CacheService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheServiceServer).Delete(ctx, req.(*CacheReader))
	}
	return interceptor(ctx, in, info, handler)
}

func _CacheService_Ttl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CacheReader)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheServiceServer).Ttl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto3.CacheService/Ttl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheServiceServer).Ttl(ctx, req.(*CacheReader))
	}
	return interceptor(ctx, in, info, handler)
}

var _CacheService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto3.CacheService",
	HandlerType: (*CacheServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Write",
			Handler:    _CacheService_Write_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _CacheService_Read_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _CacheService_Delete_Handler,
		},
		{
			MethodName: "Ttl",
			Handler:    _CacheService_Ttl_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cache.proto",
}
